<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "../dtd/concept.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

   http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<concept id="cdevspecialtfgetxxx" xml:lang="en-us">
<title>Preferred <i>getXXX()</i> methods for Derby-style table functions</title>
<shortdesc>While scanning a Derby-style table function, Derby
calls a preferred <i>getXXX()</i> method for each column, based on the
column's data type. If Derby is running on a small device platform and presenting
the JSR 169 interface to clients, then the methods which Derby calls are
slightly different. This is because JSR 169 does not support BigDecimal.
</shortdesc>
<prolog><metadata>
<keywords><indexterm>Functions<indexterm>table function getXXX() methods</indexterm></indexterm>
</keywords>
</metadata></prolog>
<conbody>
<p>The following table lists the preferred <i>getXXX()</i> method for each Derby data type.</p>

<table id="cdevspecialtftab1" rowheader="firstcol">

<title>
<b><i>getXXX()</i> Methods Called for Declared SQL Types</b>
</title>

<tgroup cols="3" colsep="1" rowsep="1">
<colspec colname="1" colnum="1" colwidth="60*"/>
<colspec colname="2" colnum="2" colwidth="20*"/>
<colspec colname="3" colnum="3" colwidth="20*"/>

<thead>
<row>
<entry align="left" colname="1" valign="bottom">Column Type Declared by CREATE FUNCTION</entry>
<entry align="left" colname="2" valign="bottom"><i>getXXX()</i> Method Called by Derby for JDBC 3.0 and 4.0</entry>
<entry align="left" colname="3" valign="bottom"><i>getXXX()</i> Method Called by Derby for JSR 169</entry>
</row>
</thead>


<tbody>

<row>
<entry colname="1">BIGINT</entry>
<entry colname="2"><i>getLong()</i></entry>
<entry colname="3">Same</entry>
</row>

<row>
<entry colname="1">BLOB</entry>
<entry colname="2"><i>getBlob()</i></entry>
<entry colname="3">Same</entry>
</row>

<row>
<entry colname="1">CHAR</entry>
<entry colname="2"><i>getString()</i></entry>
<entry colname="3">Same</entry>
</row>

<row>
<entry colname="1">CHAR FOR BIT DATA</entry>
<entry colname="2"><i>getBytes()</i></entry>
<entry colname="3">Same</entry>
</row>

<row>
<entry colname="1">CLOB</entry>
<entry colname="2"><i>getClob()</i></entry>
<entry colname="3">Same</entry>
</row>

<row>
<entry colname="1">DATE</entry>
<entry colname="2"><i>getDate()</i></entry>
<entry colname="3">Same</entry>
</row>

<row>
<entry colname="1">DECIMAL</entry>
<entry colname="2"><i>getBigDecimal()</i></entry>
<entry colname="3"><i>getString()</i></entry>
</row>

<row>
<entry colname="1">DOUBLE</entry>
<entry colname="2"><i>getDouble()</i></entry>
<entry colname="3">Same</entry>
</row>

<row>
<entry colname="1">DOUBLE PRECISION</entry>
<entry colname="2"><i>getDouble()</i></entry>
<entry colname="3">Same</entry>
</row>

<row>
<entry colname="1">FLOAT</entry>
<entry colname="2"><i>getDouble()</i></entry>
<entry colname="3">Same</entry>
</row>

<row>
<entry colname="1">INTEGER</entry>
<entry colname="2"><i>getInt()</i></entry>
<entry colname="3">Same</entry>
</row>

<row>
<entry colname="1">LONG VARCHAR</entry>
<entry colname="2"><i>getString()</i></entry>
<entry colname="3">Same</entry>
</row>

<row>
<entry colname="1">LONG VARCHAR FOR BIT DATA</entry>
<entry colname="2"><i>getBytes()</i></entry>
<entry colname="3">Same</entry>
</row>

<row>
<entry colname="1">NUMERIC</entry>
<entry colname="2"><i>getBigDecimal()</i></entry>
<entry colname="3"><i>getString()</i></entry>
</row>

<row>
<entry colname="1">REAL</entry>
<entry colname="2"><i>getFloat()</i></entry>
<entry colname="3">Same</entry>
</row>

<row>
<entry colname="1">SMALLINT</entry>
<entry colname="2"><i>getShort()</i></entry>
<entry colname="3">Same</entry>
</row>

<row>
<entry colname="1">TIME</entry>
<entry colname="2"><i>getTime()</i></entry>
<entry colname="3">Same</entry>
</row>

<row>
<entry colname="1">TIMESTAMP</entry>
<entry colname="2"><i>getTimestamp()</i></entry>
<entry colname="3">Same</entry>
</row>

<row>
<entry colname="1">VARCHAR</entry>
<entry colname="2"><i>getString()</i></entry>
<entry colname="3">Same</entry>
</row>

<row>
<entry colname="1">VARCHAR FOR BIT DATA</entry>
<entry colname="2"><i>getBytes()</i></entry>
<entry colname="3">Same</entry>
</row>

<row>
<entry colname="1">XML</entry>
<entry colname="2"><b>Not supported</b></entry>
<entry colname="3"><b>Not supported</b></entry>
</row>

</tbody>
</tgroup>
</table>

</conbody>
</concept>
